syntax = "proto3";

option java_package = "org.spin.proto.template_service";
option java_multiple_files = true;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

package template_service;

// Get Entity Request
message GetEntityRequest {
	int32 id = 1;
	string table_name = 2;
	//	Filters
	string filters = 3;
	string sort_by = 4;
	repeated string group_columns = 5;
	repeated string select_columns = 6;
	int32 page_size = 7;
	string page_token = 8;
}

// List Entities Request
message ListEntitiesRequest {
	string filters = 1;
	string sort_by = 2;
	repeated string group_columns = 3;
	repeated string select_columns = 4;
	int32 page_size = 5;
	string page_token = 6;
	string search_value = 7;
	string table_name = 8;
}

// List Entities Response
message ListEntitiesResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// Value Object from ADempiere
message Entity {
	int32 id = 1;
	string table_name = 2;
	google.protobuf.Struct values = 3;
}

// Create Entity Request
message CreateEntityRequest {
	string table_name = 1;
	google.protobuf.Struct attributes = 2;
}

// Update Entity Request
message UpdateEntityRequest {
	string table_name = 1;
	int32 id = 2;
	google.protobuf.Struct attributes = 3;
}

// Delete Entity Request
message DeleteEntityRequest {
	string table_name = 1;
	int32 id = 2;
}

// Delete Batch Entity Request
message DeleteEntitiesBatchRequest {
	string table_name = 1;
	repeated int32 ids = 2;
}

// The greeting service definition.
service TemplateService {
	// Get a Entity
	rpc GetEntity(GetEntityRequest) returns (Entity) {
		option (google.api.http) = { get: "/v1/entities/{table_name}/{id}" };
	}
	// Create Entity Request
	rpc CreateEntity(CreateEntityRequest) returns (Entity) {
		option (google.api.http) = {
			post: "/v1/entities/{table_name}",
			body: "*"
		};
	}
	// Update Entity Request
	rpc UpdateEntity(UpdateEntityRequest) returns (Entity) {
		option (google.api.http) = {
			put: "/v1/entities/{table_name}/{id}",
			body: "*"
		};
	}
	// Delete Entity Request
	rpc DeleteEntity(DeleteEntityRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = { delete: "/v1/entities/{table_name}/{id}" };
	}
	// Delete Entity Request
	rpc DeleteEntitiesBatch(DeleteEntitiesBatchRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = { post: "/v1/entities/{table_name}/batch-delete" };
	}
	//	List a Entities
	rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse) {
		option (google.api.http) = { get: "/v1/entities/{table_name}" };
	}
}